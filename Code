#include <stdio.h> 
  
// A binary search based function to find the position where item should be inserted in a[low..high] 
int binarySearch(int a[], int item, int low, int high) 
{ 
    if (high <= low) 
        return (item > a[low])?  (low + 1): low; 
    
    int mid = (low + high)/2; 
    
    if(item == a[mid]) 
        return mid+1; 
    
    if(item > a[mid]) 
        return binarySearch(a, item, mid+1, high); 
    
    return binarySearch(a, item, low, mid-1); 
} 
  
// Function to sort an array a[] of size 'n' 

void insertionSort(int a[], int n) 
{ 
    int i, loc, j, k, temp; 
  
    for (i = 1; i < n; ++i) 
    {   temp = a[i];
        j = i - 1; 
        loc = binarySearch(a,temp, 0, j);              // find location where selected sould be inseretd 
        while (j >= loc)                              // Move all elements after location to create space 
        { 
            a[j+1] = a[j]; 
            j--; 
        } 
        a[j+1] = temp; 
    } 
} 
  
int main() 
{ 
    
    int n;
    cin>>n;
    int a[n];
    for (int i=0;i<n;i++)
    insertionSort(a, n); 
    printf("Sorted array: \n"); 
    for (i = 0; i < n; i++) 
        printf("%d ",a[i]); 
    return 0; 
} 
